name: RuboCop Lint # Имя рабочего процесса
on:
  pull_request: # Запускается при создании PR или пуше в ветку с открытым PR
    branches:
      - '*'

jobs:
  run_project:
    runs-on: ubuntu-latest # Виртуальная машина

    steps:
      - name: Checkout code # 1. Получаем код
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Загружаем всю историю для сравнения с базовой веткой

      - name: Set up Ruby # 2. Настраиваем окружение
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.6' # Замените на вашу версию Ruby
          bundler-cache: true # Ускоряет установку Gem'ов, включая RuboCop

    steps:
      - name: Run RuboCop only on changed files # 3. Основная логика
        id: rubocop_check
        run: |
          # 1. Определяем базовую ветку (ветка, в которую вливается PR)
          BASE_BRANCH=${{ github.event.pull_request.base.ref }}
          echo "Базовая ветка: $BASE_BRANCH"

          # 2. Убедимся, что базовая ветка существует локально
          git fetch origin $BASE_BRANCH:$BASE_BRANCH

          # 3. Определяем измененные файлы относительно базовой ветки
          CHANGED_FILES=$(git diff --name-only --diff-filter=AM $BASE_BRANCH | grep '\.rb$' || true)

          if [ -z "$CHANGED_FILES" ]; then
            echo "Нет измененных Ruby-файлов для проверки. Проверка пропущена."
            exit 0
          fi
          
          echo "Проверка RuboCop для следующих файлов относительно $BASE_BRANCH: $CHANGED_FILES"
          
          # 4. Запускаем RuboCop только для этих файлов
          bundle exec rubocop $CHANGED_FILES